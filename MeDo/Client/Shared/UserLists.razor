@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using MeDo.Shared
@using MeDo.Client.Pages
@using MeDo.Client.State

@attribute [Authorize]
@inject HttpClient Http

@inject NavigationManager Navigation

@inherits StateContainerComponentBase
@inject StateContainer StateContainer

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <span class="oi oi-home" aria-hidden="true"></span> Tasks
        </li>
        @if (StateContainer.TodoListsState == null)
        {
            <li><em>Loading...</em></li>
        }
        else
        {
            @foreach (var list in StateContainer.TodoListsState)
            {
                <li class="nav-item px-3">
                    <button @onclick="() => LoadList(list.Id)">@list.Name</button>
                </li>
            }
        }
    </ul>
</div>

@code {
    private string NavMenuCssClass => StateContainer.CollapseNavMenuState ? "collapse" : null;


    private void ToggleNavMenu()
    {
        StateContainer.CollapseNavMenuState = !StateContainer.CollapseNavMenuState;
    }

    private void LoadList(int listId)
    {
        StateContainer.ShowListIdState = listId;
        Navigation.NavigateTo("list");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var myLists = await Http.GetFromJsonAsync<TodoLists>("Task/lists");
            StateContainer.TodoListsState = myLists.Lists;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}
